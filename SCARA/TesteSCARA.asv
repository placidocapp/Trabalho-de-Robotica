clear all;
close all;
clc

format short;
%% Inicilização  

%Variáveis das juntas
syms theta1 theta2 d3 theta4

%Parâmetros do robô
a1 = 0;
a2 = 1.2;
d1 = 1.5;
d4 = 0;

%Referencial 0
p0 = [0;0;0;1]; %Incio da junta, chutes iniciais abaixo

%Posição desejada
pfinal = [1;1;1;1];

%Pàsso
ds = 0.01;

%% SCARA

% Calcula a matriz de rotação
A1 = A(a1, 0, d1, theta1, 1);
A2 = A(a2, pi, 0, theta2, 1);
A3 = A(0, 0, d3, 0, 1);
A4 = A(0, 0, d4, theta4, 1);

%Posição de cada junta
T1 = A1*p0;
T2 = A1*A2*p0;
T3 = A1*A2*A3*p0;
T4 = A1*A2*A3*A4*p0;

%Tira o jacobiano
Jacobiano = jacobian(T4, [theta1 theta2 d3 theta4]);
Jacobiano = simplify(Jacobiano);

%Chute inicial
theta1 = deg2rad(45);
theta2 = deg2rad(20);
d3 = 0.1;
theta4 = deg2rad(0);

%Trajetória
pini = eval(A1*A2*A3*A4*p0);      %Posição inicial da ponta do robo
trajetoria = [ linspace(pini(1,1),pfinal(1,1),inv(ds));
               linspace(pini(2,1),pfinal(2,1),inv(ds));
               linspace(pini(3,1),pfinal(3,1),inv(ds));
               linspace(pini(4,1),pfinal(4,1),inv(ds))];

%Parâmetros
maxIter = 20;
theta = zeros(4, maxIter);
theta(:,1) = [theta1; theta2; d3; theta4];
eps = 10^-2;
div = 100;

%Posição inicial
pos_inicial = eval(A1*A2*A3*A4*p0);

for i = 2:inv(ds)
    pf = trajetoria(:,i);
    
    best_sol = -
    %Loop para cinemática reversa
    for theta1 = linspace(theta1-ds*d1,theta1+ds*d1,div)
        for theta2 = linspace(theta2-ds,theta2+ds,div)
            for d3 = linspace(d3-ds,d3+ds,div)
                for theta4 = linspace(theta4-ds,theta4+ds,div)
                    pos = eval(A1*A2*A3*A4*p0)
                    sol = pf - pos
                    if sol < best_sol
                        
        
    %end for
    end
    
    %Plota
    clf
    plot3(pini(1,1),pini(2,1),pini(3,1),'.b');
    hold on;
    axis([-1 3 -1 3 -1 3])
    plot3(pfinal(1,end),pfinal(2,end),pfinal(3,end),'.r');
    plot3(pf(1,end),pf(2,end),pf(3,end),'*r');
    plot3([p0(1) T1(1)],[p0(2) T1(2)],[p0(3) T1(3)], 'k');
    plot3(T1(1),T1(2), T1(3), '*')
    plot3(T2(1),T2(2), T2(3), '*')
    plot3(T3(1),T3(2), T3(3), '*')
    plot3([T1(1) T2(1)],[T1(2) T2(2)],[T1(3) T2(3)], 'k');
    plot3([T2(1) T3(1)],[T2(2) T3(2)],[T2(3) T3(3)], 'k');
    plot3([T3(1) T4(1)],[T3(2) T4(2)],[T3(3) T4(3)], 'k');
    pause(0.05);
    
    %Atualiza a posição incial como a posição atual do robo
    pos_inicial = T4;
    T4 = eval(A1*A2*A3*A4*p0);
    
%end for
end
























